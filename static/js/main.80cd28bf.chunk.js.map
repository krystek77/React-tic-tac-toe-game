{"version":3,"sources":["App.js","index.js","assets/battle.wav"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePlayer","id","board","toConsumableArray","state","currentPlayer","index","findIndex","square","isEmptySquare","player","setState","_this$state","theWinner","isAllSquaresAreTaken","check","bg_m","pause","gameOver","console","log","handleError","length","handleStart","resetGame","objectSpread","createBoard","randomPlayer","play","SQUARE_W","SQUARE_H","SIZE","BOARD_W","BOARD_H","players","Audio","bg_music","loop","addEventListener","currentTime","push","Math","floor","random","_this2","_this$state2","boardContext","map","react_default","a","createElement","key","className","onClick","onMouseOver","role","aria-label","Component","ReactDOM","render","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.80cd28bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport bg_music from './assets/battle.wav';\n\nclass App extends Component {\n\n  constructor(){\n\n    super();\n    this.SQUARE_W   = 150;\n    this.SQUARE_H   = 150;\n    this.SIZE       = 3;\n    this.BOARD_W    = this.SQUARE_W*this.SIZE;\n    this.BOARD_H    = this.SQUARE_H*this.SIZE;\n    this.players    = [\"X\",\"O\"];\n    //\n    this.bg_m = new Audio(bg_music); \n    if (typeof this.bg_m.loop == 'boolean')\n    {\n      this.bg_m.loop = true;\n    }\n    else\n    {\n      this.bg_m.addEventListener('ended', function() {\n        this.currentTime = 0;\n        this.play();\n      }, false);\n    }\n    this.bg_m.play();\n    //\n    this.state = {\n      board:[],\n      currentPlayer:'',\n      isEmptySquare:true,\n      gameOver:false,\n      theWinner:''\n    }\n    this.createBoard = ()=>{\n      const board = [];\n      for (let index = 0; index < this.SIZE*this.SIZE; index++) {\n        board.push({id:index,player:\"\"})\n      }\n      return board;\n    }\n    this.randomPlayer = ()=>{ \n      const index = Math.floor(Math.random()*this.players.length);\n      return this.players[index];\n    }\n\n    this.state.board = this.createBoard();\n    this.state.currentPlayer = this.randomPlayer();\n  }\n\n  handlePlayer = (id)=>{\n    \n    const board = [...this.state.board];\n    let currentPlayer = this.state.currentPlayer;\n    const index = board.findIndex((square)=>{return square.id===id});\n    let isEmptySquare = this.state.isEmptySquare;\n\n    if(isEmptySquare){\n\n      board[index].player = currentPlayer;\n  \n      this.setState(()=>{\n        // console.log(\"updater from setState\")\n        if(currentPlayer==='X')currentPlayer='O'\n        else currentPlayer='X'\n        return {\n          board,\n          currentPlayer,\n        };\n      },()=>{\n        // console.log(\"callback from setState\")\n        const {board,currentPlayer} = this.state;\n        let theWinner='';\n        if(this.isAllSquaresAreTaken(board) && this.check(board)===false){\n          this.bg_m.pause();\n          // console.log(\"draw\");\n          theWinner=\"😃 draw 😃\";\n\n          this.setState(()=>{\n            return {\n              gameOver:true,\n              theWinner\n            }\n          })\n\n        }else if(this.isAllSquaresAreTaken(board) && this.check(board)===true){\n          this.bg_m.pause();\n          // console.log(\"Hard victory\")\n          if(currentPlayer==='O'){theWinner='The winner is X';console.log(\"The winner is\",theWinner);}\n          else {theWinner='The winner is O';console.log(\"The winner is\",theWinner);}\n\n          this.setState(()=>{\n            return {\n              gameOver:true,\n              theWinner\n            }\n          })\n\n        }else if(!this.isAllSquaresAreTaken(board) && this.check(board)===true){\n          // console.log(\"Easy vicory\");\n          this.bg_m.pause();\n          if(currentPlayer==='O'){theWinner='The winner is X';console.log(\"The winner is\",theWinner);}\n          else {theWinner='The winner is O';console.log(\"The winner is\",theWinner);}\n\n          this.setState(()=>{\n            return {\n              gameOver:true,\n              theWinner\n            }\n          })\n        };\n      });\n    }\n  }\n\n  //\n  handleError = (id) => {\n    // console.log(id);\n    const board = [...this.state.board];\n    const index = board.findIndex((square)=>{return square.id===id});\n    const isEmptySquare = this.isEmptySquare(board,index);\n\n    this.setState({\n      isEmptySquare\n    })\n  }\n  \n  //\n  isEmptySquare = (board,index) => {\n    return board[index].player===\"\";\n  }\n  //\n  isAllSquaresAreTaken = (board) =>{\n      for (let index = 0; index < board.length; index++) {\n        if(this.isEmptySquare(board,index)) return false;\n      }\n      return true;//There is no free place\n  }\n  //\n  check = (board)=>{\n    if(   (board[0].player===board[1].player && board[1].player===board[2].player && board[0].player!=='')\n      ||  (board[3].player===board[4].player && board[4].player===board[5].player && board[3].player!=='')\n      ||  (board[6].player===board[7].player && board[7].player===board[8].player && board[6].player!=='')\n      ||  (board[0].player===board[3].player && board[3].player===board[6].player && board[0].player!=='')\n      ||  (board[1].player===board[4].player && board[4].player===board[7].player && board[1].player!=='')\n      ||  (board[2].player===board[5].player && board[5].player===board[8].player && board[2].player!=='')\n      ||  (board[0].player===board[4].player && board[4].player===board[8].player && board[0].player!=='')\n      ||  (board[2].player===board[4].player && board[4].player===board[6].player && board[2].player!=='')\n    )\n    {\n      return true;\n    }\n    return false;\n  }\n  //\n  handleStart = () =>{\n    // console.log(\"START NEW GAME\");\n    this.resetGame();\n  }\n  //\n  resetGame = () => {\n    // console.log(\"RESET GAME!\");\n    const state = {...this.state};\n    state.board = this.createBoard();\n    state.currentPlayer = this.randomPlayer();\n    this.bg_m.play();\n    \n    this.setState(()=>{\n      return {\n        ...state,\n        isEmptySquare:true,\n        gameOver:false,\n        theWinner:''\n      }\n    })\n  } \n  render() {\n    const {board,currentPlayer,isEmptySquare,gameOver,theWinner} = this.state;\n\n    let boardContext = board.map((square)=>{\n      return (\n        <div \n        key={square.id} \n        className=\"square\" \n        onClick={()=>{this.handlePlayer(square.id)}}\n        onMouseOver={()=>this.handleError(square.id)}\n        >\n        {square.player}\n        </div>\n      )\n    });\n    if(gameOver){\n      boardContext=(\n        <div className=\"result-board\">\n          <p className=\"game-over\">GAME OVER</p>\n          <span className=\"game-pad\" role=\"img\" aria-label=\"game-pad\">🎮</span>\n          {theWinner !== '' ? <p className=\"the-winner\">{theWinner}</p> : null}\n          <button className=\"try-again\" onClick={()=>{this.handleStart()}}>Try again</button>\n        </div>\n        )\n    }\n    \n\n    return (\n     <div className=\"App\">\n        <div className=\"dashboard\">\n            <h2>Controls</h2>\n            <p>Player's turn</p>\n            <div className=\"active-player-wrapper\">\n              <div className=\"square active-player\">{currentPlayer}</div>\n            </div>\n            <button className=\"reset-game\" onClick={()=>this.resetGame()}>Reset Game</button>\n        </div>\n        <div className=\"game-board\">\n          <h1>Tic Tac Toe <span role=\"img\" aria-label=\"game image\"> 😄 </span> </h1>\n          <div className=\"board\">\n            {\n              boardContext\n            }\n          </div>\n          <div className=\"tips\">\n            {isEmptySquare ? null : <p>That place is taken <span role=\"img\" aria-label=\"error image\">😢</span></p>}\n          </div>\n        </div>\n     </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/battle.e71671b3.wav\";"],"sourceRoot":""}